server {
    listen 80;
    server_name ~.;

    location /graphql {
      if ($request_method = 'OPTIONS') {
        add_header 'Access-Control-Allow-Origin' '*';
        add_header 'Access-Control-Allow-Headers' '*';
        return 204;
      }

      auth_request /_graphql_token_introspection;
      proxy_pass http://app:5080;
    }

    location /graphiql {
      if ($request_method = 'OPTIONS') {
        add_header 'Access-Control-Allow-Origin' '*';
        add_header 'Access-Control-Allow-Headers' '*';
        return 204;
      }

      auth_request /_graphql_token_introspection;
      proxy_pass http://app:5080;      
    }

    location /admin {
      if ($request_method = 'OPTIONS') {
        add_header 'Access-Control-Allow-Origin' '*';
        add_header 'Access-Control-Allow-Headers' '*';
        return 204;
      }

      auth_request /_graphql_token_introspection;
      proxy_pass http://admin:8080;      
    }

    location = /_graphql_token_introspection {
        internal;
        proxy_method      POST;
        proxy_set_header  Authorization "bearer SecretForOAuthServer";
        proxy_set_header  Content-Type "application/x-www-form-urlencoded";
        proxy_set_body    "token=$http_apikey&token_hint=access_token";
        proxy_pass        http://auth:3000/oauth/graphql;

        proxy_cache           token_responses;        # Enable caching
        proxy_cache_key       $http_authorization;    # Cache for each access token
        proxy_cache_lock      on;                     # Duplicate tokens must wait
        proxy_cache_valid     200 10s;                # How long to use each response
        proxy_ignore_headers  Cache-Control Expires Set-Cookie;
    }

    location = /_admin_token_introspection {
        internal;
        proxy_method      POST;
        proxy_set_header  Authorization "bearer SecretForOAuthServer";
        proxy_set_header  Content-Type "application/x-www-form-urlencoded";
        proxy_set_body    "token=$http_apikey&token_hint=access_token";
        proxy_pass        http://auth:3000/oauth/admin;  

        proxy_cache           token_responses;        # Enable caching
        proxy_cache_key       $http_authorization;    # Cache for each access token
        proxy_cache_lock      on;                     # Duplicate tokens must wait
        proxy_cache_valid     200 10s;                # How long to use each response
        proxy_ignore_headers  Cache-Control Expires Set-Cookie;    
    }
}